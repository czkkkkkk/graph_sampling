import torch
import gs

A = gs.Graph(False)
indptr = torch.LongTensor([0, 1, 1, 3, 4]).cuda()
indices = torch.LongTensor([4, 0, 1, 2]).cuda()
lhs = torch.tensor([1, 2, 3, 4, 5], dtype=torch.float32).cuda()
rhs = torch.tensor([1, 2, 3, 4], dtype=torch.float32).cuda()
edata = torch.tensor([1, 2, 3, 4], dtype=torch.float32).cuda()
A._CAPI_load_csc(indptr, indices)
m = gs.Matrix(A)
out = gs.ops.u_add_v(m, lhs, rhs)
print(out)
out = gs.ops.v_add_u(m, rhs, lhs)
print(out)
out = gs.ops.u_mul_v(m, lhs, rhs)
print(out)
out = gs.ops.v_mul_u(m, rhs, lhs)
print(out)
out = gs.ops.u_add_e(m, lhs, edata)
print(out)
out = gs.ops.v_add_e(m, rhs, edata)
print(out)
